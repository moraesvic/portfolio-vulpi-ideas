{
    "title": "Gerador de neologismos",
    "nWords": "Número de palavras",
    "lang": "Idioma",
    "lang_select": "selecione uma opção",
    "lang_ar": "Árabe",
    "lang_de": "Alemão",
    "lang_en": "Inglês",
    "lang_el": "Grego",
    "lang_eo": "Esperanto",
    "lang_es": "Espanhol",
    "lang_fr": "Francês",
    "lang_he": "Hebraico",
    "lang_hrsr_cy": "Serbo-Croata (Cirílico)",
    "lang_hrsr_la": "Serbo-Croata (Latino)",
    "lang_it": "Italiano",
    "lang_nl": "Holandês",
    "lang_no": "Norueguês",
    "lang_pl": "Polonês",
    "lang_pt_br": "Português (BR)",
    "lang_pt_pt": "Português (PT)",
    "lang_ro": "Romeno",
    "lang_ru": "Russo",
    "lang_sq": "Albanês",
    "lang_uk": "Ucraniano",
    "trieDepth": "Profundidade do Trie",
    "minWordLen": "Número mínimo de letras",
    "send": "Enviar",
    "what_is_this": "O que é isto",
    "p01": "Isto é um gerador de neologismos. Um <a href='https://en.wikipedia.org/wiki/Neologism'>neologismo</a> é uma palavra recentemente cunhada. Apesar de alguma criatividade estar envolvida no processo de criação de novas palavras, como é justo ser creditado aos gênios de Shakespeare, Joyce e Guimarães Rosa, os neologismos seguem padrões fonológicos e morfológicos que podem ser replicados por meio de um processo mecânico.",
    "p02": "Partindo de listas de frequência das palavras em línguas naturais, obtidas <a href='https://invokeit.wordpress.com/frequency-word-lists/'>deste blog</a> referido pela Wikipedia, produzimos novas palavras, que seguem seu padrão segundo um <a href='https://en.wikipedia.org/wiki/Markov_chain'>processo Markov (anamnésico)</a>.",
    "p03": "Por exemplo, a i-ésima letra de uma palavra dependerá apenas das últimas N letras definidas pelo parâmetro \"Trie Depth\" (profundidade do Trie). Se você usar um \"Trie-Depth\" muito baixo, você vai acabar com palavras praticamente aleatórias, pois a próxima letra depende apenas das últimas uma ou duas. Quando esse parâmetro aumenta, obtemos palavras meio engraçadas, mas que até poderiam ser encontradas na língua, ainda que como um trocadilho. Com um Trie-Depth alto, as palavras são provavelmente palavras reais da língua, que não se encontravam na lista original por serem específicas demais (muitos afixos derivativos e por aí vai).",
    "p04": "O backend foi implementado em C, com minha própria versão da estrutura de dados \"Trie\". Como demonstrado em <a href='/node-vs-c'>outro artigo</a> publicado por mim, um código C compilado e otimizado pode ser pelo menos 5 vezes mais rápido que o NodeJS nativo. Isso torna o programa bastante eficiente em processar listas de frequência. De fato, a maior parte do trabalho ocorre na verdade na tentativa de encontrar uma palavra que siga o processo Markov especificado, mas não esteja na lista original. De qualquer maneira, mesmo nos piores cenários plausíveis, o servidor geralmente responde em apenas 4 segundos e usando apenas 100 MB de RAM.",
    "p05": "A parte web do backend é implementada com NodeJS, e a biblioteca teen_process é utilizada para chamar código C como um processo externo.",
    "p06": "<a href='https://github.com/moraesvic/neologism-generator'>Veja o código fonte no GitHub!</a>",
    "alertSelectLanguage": "Por favor selecione um idioma."
}