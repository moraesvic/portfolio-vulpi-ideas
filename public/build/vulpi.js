var API=new function(){async function postLemma(lemma,isoLemma,pos,descr,isoDescr,areYouSure){let payload={lemma:lemma,isoLemma:isoLemma,pos:pos,descr:descr,isoDescr:isoDescr,areYouSure:areYouSure};return XHR.postData("/lemmas",null,payload,null)}async function getSense(id,position){return XHR.getData("/senses",[id,position])}async function postSense(id,partOfSpeech,isoDescr,descr){let payload={partOfSpeech:partOfSpeech,isoDescr:isoDescr,descr:descr};return XHR.postData("/senses",[id],payload)}async function patchSense(id,position,translationIso,newTranslation){let payload={translationIso:translationIso,newTranslation:newTranslation};return XHR.patchData("/senses",[id,position],payload)}async function deleteSense(id,position){return XHR.deleteData("/senses",[id,position])}function getListOfLanguages(){return XHR.getData("/lol")}function getMapOfLanguages(){let query={map:"true"};return XHR.getData("/lol",null,query)}function getPartsOfSpeech(lang){return XHR.getData("/pos",[lang])}function getLemmaByIdInLanguage(id,lang){let query={lang:lang};return XHR.getData("/lemmas/id",[id],query)}function getAllLemmasPOJOInDict(iso){return XHR.getData("/lemmas/iso",[iso])}function getAllLemmasPOJOInDictWithTransl(iso,translIso){let query={lang:translIso};return XHR.getData("/lemmas/iso",[iso],query)}function getLemmasPOJOInDictByTitle(iso,title){let query={title:title};return XHR.getData("/lemmas/iso",[iso],query)}function getLemmasPOJOInDictByTitleWithTransl(iso,title,translIso){let query={title:title,lang:translIso};return XHR.getData("/lemmas/iso",[iso],query)}function getLemmaCountInDictByTitle(iso,title){let query={title:title,count:"true"};return XHR.getData("/lemmas/iso",[iso],query)}function postLanguage(nameInternal,iso1,iso2,iso3,endonym,notAvailable){let payload={nameInternal:nameInternal,iso1:iso1,iso2:iso2,iso3:iso3,endonym:endonym,notAvailable:notAvailable};return XHR.postData("/languages",null,payload,null)}function patchLanguage(nameFor,nameIn,newName){let payload={nameIn:nameIn,newName:newName};return XHR.patchData("/languages",[nameFor],payload,null)}function getNearestMatchTranslation(nameInternal){return XHR.getData("/translations/check",[nameInternal],null)}function getExistentTranslation(nameInternal,iso){return XHR.getData("/translations/get",[nameInternal,iso],null)}function patchTranslation(nameInternal,iso,newTranslation){let payload={iso:iso,newTranslation:newTranslation};return XHR.patchData("/translations",[nameInternal],payload,null)}{this.getSense=getSense;this.postSense=postSense;this.patchSense=patchSense;this.deleteSense=deleteSense;this.getListOfLanguages=getListOfLanguages;this.getMapOfLanguages=getMapOfLanguages;this.getPartsOfSpeech=getPartsOfSpeech;this.getLemmaByIdInLanguage=getLemmaByIdInLanguage;this.postLemma=postLemma;this.postLanguage=postLanguage;this.patchLanguage=patchLanguage;this.getNearestMatchTranslation=getNearestMatchTranslation;this.getExistentTranslation=getExistentTranslation;this.patchTranslation=patchTranslation}};var Auth=new function(){async function postLogin(uname,passwd){let payload={uname:uname,passwd:passwd};return XHR.postData("/login",null,payload,null)}async function postRegister(uname,passwd){let payload={uname:uname,passwd:passwd};return XHR.postData("/register",null,payload,null)}async function postLogout(){return XHR.postData("/logout",null,null,null)}this.postLogin=postLogin;this.postRegister=postRegister;this.postLogout=postLogout};var Filler=new function(){async function populateIsoSelector(id=null,autoSelect=null){let languages=await API.getListOfLanguages();let html="";for(let i=0;i<languages.length;i++){let iso=languages[i];html+=`<option value=${iso}>${iso}</option>`}function insertInSelector(selector){selector.insertAdjacentHTML("beforeend",html);if(autoSelect)selector.value=autoSelect}if(id){let selector=document.getElementById(id);insertInSelector(selector)}else{let selectors=document.querySelectorAll(".iso-selector");selectors.forEach(insertInSelector)}}async function populatePOSSelector(isoLang){let partsOfSpeech=await API.getPartsOfSpeech(isoLang);let html="";for(let[key,value]of Object.entries(partsOfSpeech)){html+=`<option value=${key}>${value}</option>`}let selectors=document.querySelectorAll(".pos-selector");selectors.forEach(selector=>{selector.insertAdjacentHTML("beforeend",html)})}this.populateIsoSelector=populateIsoSelector;this.populatePOSSelector=populatePOSSelector};var Footer=new function(){function configureHelpSpans(){let helpSpans=Array.from(document.querySelectorAll(".help"));helpSpans.forEach(h=>{let place;if(h.classList.contains("help-top"))place="top";else if(h.classList.contains("help-bottom"))place="bottom";else if(h.classList.contains("help-right"))place="right";else if(h.classList.contains("help-left"))place="left";let title=h.innerHTML.replace(/"/g,"&quot;");let img=`<i class="fas fa-question-circle"
		data-bs-toggle="tooltip" data-bs-html="true"
		data-bs-placement="${place}"
		title="${title}"></i>`;h.insertAdjacentHTML("beforebegin",img);h.remove()})}function configureBootstrapTooltip(){let tooltipList=Array.from(document.querySelectorAll('[data-bs-toggle="tooltip"]'));tooltipList.map(elem=>{return new bootstrap.Tooltip(elem)})}function addTitleToImgs(){let imgsWithAlt=document.querySelectorAll("[alt]");imgsWithAlt.forEach(img=>{let alt=img.getAttribute("alt");img.setAttribute("title",alt)})}function configureNotes(){let notes=document.querySelectorAll(".note");let refs=document.querySelectorAll(".note-ref");if(notes.length!==refs.length){console.log("Error! Number of notes and references don't match!");return}for(let i=0;i<notes.length;i++){let anchor=`<a href="#note-${i+1}">[${i+1}]</a>`;let backAnchor=`<span class="footnote">
			<a href="#note-${i+1}-back">[${i+1}]</a>
		</span> `;notes[i].id=`note-${i+1}-back`;refs[i].id=`note-${i+1}`;notes[i].insertAdjacentHTML("afterbegin",anchor);refs[i].insertAdjacentHTML("afterbegin",backAnchor)}}function fillTimeToRead(){let timeToRead=document.querySelector(".time-to-read");if(!timeToRead)return;let nWords=getWordCount();let minutes=Math.floor(nWords/250);if(minutes===0)return;let minutesWord=minutes===1?MINUTES_SINGULAR:MINUTES_PLURAL;timeToRead.innerText=`${READING_TIME}: ${minutes} ${minutesWord}`}function getWordCount(){let main=document.querySelector(".page-main-content");let nodes=main.querySelectorAll("p, h1, h2, h3, h4, h5, h6");let count=0;for(let i=0;i<nodes.length;i++){let arr=nodes[i].textContent.split(" ");let filter=arr.filter(word=>word.match(/\w+/));count+=filter.length}return count}async function logout(){let data=await Auth.postLogout();if(data.success){location=`/${PAGE_LANGUAGE_ISO}`}else alert(`${ERROR_IN_LOGOUT}: ${data.error}.`)}function runFooter(){configureHelpSpans();configureBootstrapTooltip();fillTimeToRead();addTitleToImgs();configureNotes()}document.addEventListener("DOMContentLoaded",function(){setTimeout(runFooter,0)});document.getElementById("logout-button").addEventListener("click",logout)};var Generic=new function(){function promiseTimeout(ms){return new Promise((resolve,reject)=>setTimeout(resolve,ms))}async function checkChange(DOMObj,initialState,ms){await promiseTimeout(ms);let value=DOMObj.value;return value===initialState?false:true}function randint(a,b){if(a===b)throw"Bad input";if(b<a){let tmp=b;b=a;a=tmp}let range=b-a;return a+_randint(range)}function _randint(n){return Math.floor(Math.random()*n)}function pickFromArray(arr){return arr[randint(0,arr.length)]}function useRandomImg(id,path,fileList){const img=document.getElementById(id);if(!img)throw"Given element is not in document";let chosenFile=pickFromArray(fileList);let src=`${path}${chosenFile}`;img.src=src}this.promiseTimeout=promiseTimeout;this.checkChange=checkChange;this.randint=randint;this.pickFromArray=pickFromArray;this.useRandomImg=useRandomImg};var XHR=new function(){function formToJSON(form,options){const sz=form.children.length;let dict={};for(let i=0;i<sz;i++)formToJSON_2(form.children[i],dict);if(options!==undefined)for(key in options)dict[key]=options[key];return dict}function formToJSON_2(el,dict){const validTags=["INPUT","SELECT","TEXTAREA","DATALIST","OUTPUT"];if(validTags.includes(el.tagName))dict[el.name]=el.value;const sz=el.children.length;for(let i=0;i<sz;i++)formToJSON_2(el.children[i],dict)}function formToJSONStr(form,options){let dict=formToJSON(form,options);return JSON.stringify(dict)}function formToJSONNative(form){const fd=new FormData(form);let dict={};for(let[key,value]of fd.entries())dict[key]=value;return JSON.stringify(dict)}async function myFetch(url,params){let response=await fetch(url,params);if(!response.ok)throw new Error("Server returned error code.");let parsed=await response.json();if(Object.keys(parsed).length===0)throw new Error("Server returned empty response.");if(parsed.redirect){alert("You must login again!");location.href=parsed.redirect;throw new Error("Must reauthenticate.")}return parsed}function checkType(path,payload,query){if(path&&!(path instanceof Array)||payload&&!(payload.constructor==Object)||query&&!(query.constructor==Object)){throw new Error("Invalid input")}}async function HTTPRequest(url,path,payload,query,method){checkType(path,payload,query);let newUrl=url;if(path)for(let subpath of path)newUrl+="/"+subpath;if(query){let queryStr=new URLSearchParams(query).toString();newUrl+="?"+queryStr}let opt={method:method,headers:{"Content-Type":"application/json"}};if(method!=="GET"&&method!=="HEAD"&&payload)opt.body=JSON.stringify(payload);return myFetch(newUrl,opt)}async function getData(url,path,query){return HTTPRequest(url,path,null,query,"GET")}async function headData(url,path,query){return HTTPRequest(url,path,null,query,"HEAD")}async function postData(url,path,payload,query){return HTTPRequest(url,path,payload,query,"POST")}async function putData(url,path,payload,query){return HTTPRequest(url,path,payload,query,"PUT")}async function patchData(url,path,payload,query){return HTTPRequest(url,path,payload,query,"PATCH")}async function deleteData(url,path,payload,query){return HTTPRequest(url,path,payload,query,"DELETE")}{this.formToJSON=formToJSON;this.formToJSONStr=formToJSONStr;this.formToJSONNative=formToJSONNative;this.getData=getData;this.headData=headData;this.postData=postData;this.putData=putData;this.patchData=patchData;this.deleteData=deleteData}};
